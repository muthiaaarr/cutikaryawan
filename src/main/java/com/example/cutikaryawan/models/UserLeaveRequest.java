package com.example.cutikaryawan.models;
// Generated Nov 18, 2020 10:06:11 AM by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EntityListeners;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.springframework.data.annotation.CreatedBy;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedBy;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

/**
 * UserLeaveRequest generated by hbm2java
 */
@Entity
@Table(name = "user_leave_request", schema = "public")
@EntityListeners(AuditingEntityListener.class)
@JsonIgnoreProperties(value = {"dateOfFiling", "createdAt", "updatedAt"})
public class UserLeaveRequest implements java.io.Serializable {

	private long userLeaveRequestId;
	private User user;
	private String submissionStatus;
	private Date dateOfFiling;
	private Date leaveDateFrom;
	private Date leaveDateTo;
	private String description;
	private Integer remainingDaysOff;
	private String createdBy;
	private Date createdAt;
	private String updatedBy;
	private Date updatedAt;
	private Set<BucketApproval> bucketApprovals = new HashSet<BucketApproval>(0);

	public UserLeaveRequest() {
	}

	public UserLeaveRequest(long userLeaveRequestId, User user, Date dateOfFiling, Date leaveDateFrom, Date leaveDateTo,
			String description, String createdBy, Date createdAt) {
		this.userLeaveRequestId = userLeaveRequestId;
		this.user = user;
		this.dateOfFiling = dateOfFiling;
		this.leaveDateFrom = leaveDateFrom;
		this.leaveDateTo = leaveDateTo;
		this.description = description;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
	}

	public UserLeaveRequest(long userLeaveRequestId, User user, String submissionStatus, Date dateOfFiling,
			Date leaveDateFrom, Date leaveDateTo, String description, Integer remainingDaysOff, String createdBy,
			Date createdAt, String updatedBy, Date updatedAt, Set<BucketApproval> bucketApprovals) {
		this.userLeaveRequestId = userLeaveRequestId;
		this.user = user;
		this.submissionStatus = submissionStatus;
		this.dateOfFiling = dateOfFiling;
		this.leaveDateFrom = leaveDateFrom;
		this.leaveDateTo = leaveDateTo;
		this.description = description;
		this.remainingDaysOff = remainingDaysOff;
		this.createdBy = createdBy;
		this.createdAt = createdAt;
		this.updatedBy = updatedBy;
		this.updatedAt = updatedAt;
		this.bucketApprovals = bucketApprovals;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "generator_user_leave_request_user_leave_request_id_2_seq")
	@SequenceGenerator(name = "generator_user_leave_request_user_leave_request_id_2_seq", sequenceName = "user_leave_request_user_leave_request_id_2_seq",
							schema = "public", allocationSize = 1)
	@Column(name = "user_leave_request_id", unique = true, nullable = false)
	public long getUserLeaveRequestId() {
		return this.userLeaveRequestId;
	}

	public void setUserLeaveRequestId(long userLeaveRequestId) {
		this.userLeaveRequestId = userLeaveRequestId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "submission_status")
	public String getSubmissionStatus() {
		return this.submissionStatus;
	}

	public void setSubmissionStatus(String submissionStatus) {
		this.submissionStatus = submissionStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_of_filing", length = 13)
	@CreatedDate
	public Date getDateOfFiling() {
		return this.dateOfFiling;
	}

	public void setDateOfFiling(Date dateOfFiling) {
		this.dateOfFiling = dateOfFiling;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "leave_date_from", nullable = false, length = 13)
	public Date getLeaveDateFrom() {
		return this.leaveDateFrom;
	}

	public void setLeaveDateFrom(Date leaveDateFrom) {
		this.leaveDateFrom = leaveDateFrom;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "leave_date_to", nullable = false, length = 13)
	public Date getLeaveDateTo() {
		return this.leaveDateTo;
	}

	public void setLeaveDateTo(Date leaveDateTo) {
		this.leaveDateTo = leaveDateTo;
	}

	@Column(name = "description", nullable = false)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "remaining_days_off")
	public Integer getRemainingDaysOff() {
		return this.remainingDaysOff;
	}

	public void setRemainingDaysOff(Integer remainingDaysOff) {
		this.remainingDaysOff = remainingDaysOff;
	}

	@Column(name = "created_by")
	@CreatedBy
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 29)
	@CreatedDate
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Column(name = "updated_by")
	@LastModifiedBy
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 29)
	@LastModifiedDate
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userLeaveRequest")
	public Set<BucketApproval> getBucketApprovals() {
		return this.bucketApprovals;
	}

	public void setBucketApprovals(Set<BucketApproval> bucketApprovals) {
		this.bucketApprovals = bucketApprovals;
	}

}
